void openMenu();
sub brush(int x, int y, int radius);
sub saveImage();
sub restoreImage();

bool pixels[64][100];

task main()
{
 //init settings array
 bool temp[64];
 ArrayInit(temp,FALSE,64);   //set all to false
 ArrayInit(pixels,temp,100);

 //init sensors
 SetSensorType(OUT_B, SENSOR_TYPE_ROTATION); //Port B, x-axis
 SetSensorType(OUT_C, SENSOR_TYPE_ROTATION); //Port C, y-axis
 ClearSensor(OUT_B); ClearSensor(OUT_C);

 int x, y, i;
 
 i = 0;
 
 while(TRUE)
  {
   if(ButtonPressed(BTNCENTER,true)){
    //openMenu();
    //TextOut(0, LCD_LINE2, "Hello!",DRAW_OPT_NORMAL);
   }

   x=MotorTachoCount(OUT_B); // get line start
   y=MotorTachoCount(OUT_C);
 
   x = x/10; y = y/-10;  //scale the input to screen
 
   if(x>99) {x=99;} else if (x<0) x = 0;  //make sure to stay within
   if(y>63) {y=63;} else if (y<0) y = 0;  //boundaries of the array
 
   brush(x,y,0.5);  //draw the point, radius under 1 makes 1 pixel line
 
   //i++; //testing only
 
   //if (i>10000){
    //restoreImage();
    //TextOut(0, LCD_LINE4, "Image restored");
    //i=0;
    //Wait(1000);
   //}
 }
}

sub brush(int x, int y, int radius){
 pixels[x][y]=1; //for some reason, this assignment doesn't work
                    //despite the corrected values
 TextOut(0, LCD_LINE1, "X=");  //debug info
 TextOut(0, LCD_LINE2, "Y=");
 NumOut(10, LCD_LINE1, x);
 NumOut(10, LCD_LINE2, y);
 CircleOut(x, y, radius, DRAW_OPT_NORMAL);
 if (pixels[x][y]==TRUE){
   TextOut(0, LCD_LINE3, "true");
 }
 else {
   TextOut(0, LCD_LINE3, "false");
 }
}

//if possible, this should be in a separate file
void openMenu()
{
  //create graphics
  //handle menu navigation
  //clear screen
  //restore image data
}

//write image data to file
sub saveImage(){}

sub restoreImage()
{
//load image data from array
 ClearScreen();
 int i,j;
    TextOut(0, LCD_LINE1, "X=");  //debug info
    TextOut(0, LCD_LINE2, "Y=");
    
 for(i = 0; i<100;i++){
  for(j = 0; j<64;j++){
    if(pixels[i][j]==TRUE){
     PointOut(i,j,DRAW_OPT_NORMAL);
      TextOut(10, LCD_LINE1, "true");  //debug info
      TextOut(10, LCD_LINE2, "true");
    } else {
      TextOut(10, LCD_LINE1, "false");  //debug info
      TextOut(10, LCD_LINE2, "false");
    }
   Wait(100);
  }
 }
}
